package request

import (
	"Wetao/cmd/tg_worker/admin"
	orderModel "Wetao/internal/api_back/app/http/models/order"
	"fmt"
	tg_bot_api "github.com/go-telegram-bot-api/telegram-bot-api"
	"github.com/rs/zerolog/log"
	"strings"
)

//5159648991:AAGoNNIAaCH47DQqjVDagt1kqnMRnPJR4GM

func TelegramSendMsgNewOrderReq(item orderModel.Orders) {
	chatID := 1248134771
	//
	var arrMsg []string
	//var tags []string
	//var paramTagsText = ite

	var typeBuyBackStr string

	switch item.TypeBuyback {
	case "we_buy":
		typeBuyBackStr = "–í—ã–∫—É–ø–∞–µ–º –º—ã! +5%"
	case "you_buy":
		typeBuyBackStr = "–í—ã–∫—É–ø–∞–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—å!"
	}

	// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ä–µ–∑
	arrMsg = append(arrMsg,
		"üî•üì¶ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–∞—Ä–≥–æ:\n",
		"----", "üìå –ö—Ç–æ –≤—ã–∫—É–ø–∞–µ—Ç: <b>", typeBuyBackStr, "</b>----\n")

	//if len(paramTagsText) > 0 {
	//	if paramTagsText != "" {
	//		tags = strings.Split(paramTagsText, ",")
	//	}
	//
	//	arrMsg = append(arrMsg, fmt.Sprintf("üëÄ	–¢–µ–≥–∏: %s \n", "#"+strings.Join(tags, ",#")))
	//}

	//arrMsg = append(arrMsg, fmt.Sprintf("üïì –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: %s \n", item.Date), "----\n")
	arrMsg = append(arrMsg, fmt.Sprintf("*** <b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> #idx_%s", item.Idx), "----\n")
	//
	arrMsg = append(arrMsg, fmt.Sprintf("üõí –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä(–æ–±—ä–µ–∫—Ç) ‚Äî %s", item.ProductLinkURL), "----")
	arrMsg = append(arrMsg, fmt.Sprintf("üõí –û–±—ä—ë–º –≥—Ä—É–∑–∞ ‚Äî %s %s ", item.WeightSizes.Name, "KG"), "----")
	arrMsg = append(arrMsg, fmt.Sprintf("‚úàÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞-–ü–æ–ª—É—á–µ–Ω–∏–µ ‚Äî %s", "<b>Gaunho ‚Äî Moscow</b>"), "----")
	arrMsg = append(arrMsg, fmt.Sprintf("ü•∏ –ó–∞–∫–∞–∑—á–∏ ‚Äî ID #usr_%d ", item.UserID), "----")
	arrMsg = append(arrMsg, fmt.Sprintf("üéÄ –¢–∏–ø —É–ø–∞–∫–æ–≤–∫–∏ ‚Äî %d ", item.PkgID), "----")
	arrMsg = append(arrMsg, fmt.Sprintf("‚úàÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞ ‚Äî %d", item.CatID), "----")
	arrMsg = append(arrMsg, fmt.Sprintf("üß≥ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å #%s ", item.Status), "----")
	arrMsg = append(arrMsg, fmt.Sprintf("üí∏ –û–±—â–∞—è —Å—É–º–º–∞ ‚Äî %v", item.TotalAmountPrice), "----")
	//
	arrMsg = append(arrMsg, fmt.Sprintf("TAGS: #%v, #idx_%v, #usr_%d", item.TypeBuyback, item.Idx, item.UserID), "----")
	//arrMsg = append(arrMsg, fmt.Sprintf("üïì –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: %s \n", item.Date), "----\n")

	//if len(item.Description) >= 480 {
	//	arrMsg = append(arrMsg, fmt.Sprintf("%s \n", item.Description[0:420]))
	//} else {
	//	arrMsg = append(arrMsg, fmt.Sprintf("%s \n", item.Description))
	//}

	// –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫
	combinedMsgString := strings.Join(arrMsg, "\n")

	// Create a message configuration
	msg := tg_bot_api.NewMessage(int64(chatID), combinedMsgString)
	msg.ParseMode = tg_bot_api.ModeHTML

	var keyboardRow []tg_bot_api.InlineKeyboardButton
	var keyboardRow2 []tg_bot_api.InlineKeyboardButton
	var btnUrl = item.ProductLinkURL

	keyboardRow = tg_bot_api.NewInlineKeyboardRow(
		tg_bot_api.NewInlineKeyboardButtonURL(fmt.Sprintf("üõç –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞ \n"), item.ProductLinkURL),
	)
	keyboardRow2 = tg_bot_api.NewInlineKeyboardRow(
		tg_bot_api.NewInlineKeyboardButtonURL(fmt.Sprintf("ü§ù –ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É - —Ü. %f –†—É–±.", item.TotalAmountPrice), btnUrl),
	)
	//
	msg.ReplyMarkup = tg_bot_api.NewInlineKeyboardMarkup(keyboardRow, keyboardRow2)
	//msg.ReplyMarkup = tg_bot_api.NewInlineKeyboardMarkup(keyboardRow)

	// Send the text message
	messageSend, err := admin.
		TgBotInit().
		Send(msg)
	if err != nil {
		log.Err(fmt.Errorf("err tg: %v", err))
	} else {
		log.Printf("tg_msg_id:", messageSend.MessageID)
	}

}
